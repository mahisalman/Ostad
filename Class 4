

Class - 4
---------
=========

Topic-1
-------
English: Statistics is the science of collecting, analyzing, and interpreting data.
BD Bengali Explanation: ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи (Statistics) рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ рж╢рж╛рж╕рзНрждрзНрж░ ржпрж╛ ржбрзЗржЯрж╛ рж╕ржВржЧрзНрж░рж╣, ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржПржмржВ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред
ржЙржжрж╛рж╣рж░ржгрж╕рзНржмрж░рзВржк: ржпржжрж┐ ржврж╛ржХрж╛ рж╢рж╣рж░рзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржорж╛ржирзБрж╖рзЗрж░ ржЗржиржХрж╛ржо ржирж╛ ржорж╛ржкрж╛ ржпрж╛ржпрж╝, рждржмрзЗ рззрзжрзж ржЬржирзЗрж░ ржЗржиржХрж╛ржо ржирж┐ржпрж╝рзЗ ржЧржбрж╝ ржмрзЗрж░ ржХрж░рж▓рзЗржЗ ржЕржирзЗржХ ржХрж┐ржЫрзБ ржмрзЛржЭрж╛ ржпрж╛ржпрж╝ред

ЁЯО▓ 2. Introduction to Probability Concepts
ЁЯУШ English: Probability measures how likely something is to happen (between 0 and 1).
BD Bengali Explanation: рж╕ржорзНржнрж╛ржмржирж╛ (Probability) рж╣рж▓рзЛ ржХрзЛржирзЛ ржШржЯржирж╛ ржШржЯрж╛рж░ рж╕ржорзНржнрж╛ржмрзНржпрждрж╛ред ржПрж░ ржорж╛ржи рж╣ржпрж╝ рзж (ржШржЯржмрзЗ ржирж╛) ржерзЗржХрзЗ рзз (ржЕржмрж╢рзНржпржЗ ржШржЯржмрзЗ) ржПрж░ ржоржзрзНржпрзЗред
ЁЯМ║ Bangladeshi Analogy: ржЖржкржирж┐ ржПржХржЯрж┐ ржХржпрж╝рзЗржи ржЫрзБржбрж╝рж▓рзЗржитАФрж╣рзЗржб ржмрж╛ ржЯрзЗржЗрж▓ рж╣ржмрзЗред ржжрзБржЯрзЛржЗ рж╕ржорзНржнрж╛ржмржирж╛ рж╕ржорж╛ржи, ржЕрж░рзНржерж╛рзО рзлрзж%ред

English:
Mean = Sum ├╖ Count
Median = Middle value in sorted data

BD Bengali Explanation:
ржЧржбрж╝ (Mean) ржорж╛ржирзЗ рж╕ржм ржорж╛ржи ржпрзЛржЧ ржХрж░рзЗ рж╕ржВржЦрзНржпрж╛ ржжрж┐ржпрж╝рзЗ ржнрж╛ржЧред
ржоржзрзНржпржХ (Median) ржорж╛ржирзЗ ржорж╛ржЭрзЗрж░ ржорж╛ржи, ржбрзЗржЯрж╛ рж╕рж╛ржЬрж┐ржпрж╝рзЗ ржжрзЗржЦрждрзЗ рж╣ржпрж╝ред

Example:
ржЖржкржирж╛рж░ ржмржирзНржзрзБрж░рж╛ ржПржХржжрж┐ржирзЗ ржПржЗ ржЯрж╛ржХрж╛ ржЦрж░ржЪ ржХрж░рзЗржЫрзЗ: рззрзж, рзирзж, рзйрзж, рзкрзж ржЯрж╛ржХрж╛ред ржЧржбрж╝ = (рззрзж+рзирзж+рзйрзж+рзкрзж)/рзк = рзирзл ржЯрж╛ржХрж╛ред

4. Calculating Mean and Median English: Mean = Sum ├╖ Count
Median = Middle value in sorted data

BD Bengali Explanation: ржЧржбрж╝ (Mean) ржорж╛ржирзЗ рж╕ржм ржорж╛ржи ржпрзЛржЧ ржХрж░рзЗ рж╕ржВржЦрзНржпрж╛ ржжрж┐ржпрж╝рзЗ ржнрж╛ржЧред
ржоржзрзНржпржХ (Median) ржорж╛ржирзЗ ржорж╛ржЭрзЗрж░ ржорж╛ржи, ржбрзЗржЯрж╛ рж╕рж╛ржЬрж┐ржпрж╝рзЗ ржжрзЗржЦрждрзЗ рж╣ржпрж╝ред

Example: ржЖржкржирж╛рж░ ржмржирзНржзрзБрж░рж╛ ржПржХржжрж┐ржирзЗ ржПржЗ ржЯрж╛ржХрж╛ ржЦрж░ржЪ ржХрж░рзЗржЫрзЗ рззрзж, рзирзж, рзйрзж, рзкрзж ржЯрж╛ржХрж╛ред ржЧржбрж╝ = (рззрзж+рзирзж+рзйрзж+рзкрзж)/рзк = рзирзл ржЯрж╛ржХрж╛ред
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Mean
Medium
Calculating mean and median

ЁЯУМ ржХрзЛржб:

scores = [72, 88, 91, 65, 70, 85, 95, 79, 83, 77]
print("Student scores:", scores)

import statistics
mean = statistics.mean(scores)
print("Mean:", mean)

median = statistics.median(scores)
print("Median:", median)

Result =>
---------
Student scores: [72, 88, 91, 65, 70, 85, 95, 79, 83, 77]
Mean: 80.5
Median: 81.0

ЁЯУШ ржмрзНржпрж╛ржЦрзНржпрж╛ ржмрж╛ржВрж▓рж╛рзЯ:
ЁЯФ╣ scores = [...]

ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ scores ржирж╛ржорзЗрж░ ржПржХржЯрж┐ рждрж╛рж▓рж┐ржХрж╛ (list) рждрзИрж░рж┐ ржХрж░рзЗржЫрж┐, ржпрзЗржЦрж╛ржирзЗ рззрзж ржЬржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржиржорзНржмрж░ ржЖржЫрзЗред
ЁЯФ╣ print("Student scores:", scores)

ржПржЗ рж▓рж╛ржЗржирзЗ ржЖржорж░рж╛ рж╕рзНржХрзЛрж░ржЧрзБрж▓рзЛрж░ рждрж╛рж▓рж┐ржХрж╛ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рзЗржЫрж┐ред
ЁЯФ╣ import statistics

statistics ржоржбрж┐ржЙрж▓ржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп ржЗржоржкрзЛрж░рзНржЯ ржХрж░рзЗржЫрж┐ред ржПржЯрж┐ Python-ржПрж░ ржПржХржЯрж┐ ржмрж┐рж▓рзНржЯ-ржЗржи ржоржбрж┐ржЙрж▓, ржпрзЗржЯрж┐ ржЧрж╛ржгрж┐рждрж┐ржХ ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржгрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред
ЁЯФ╣ mean = statistics.mean(scores)

ржПржЯрж┐ рж╕ржм рж╕рзНржХрзЛрж░рзЗрж░ ржЧрзЬ (Mean) ржмрзЗрж░ ржХрж░рзЗред ржЕрж░рзНржерж╛рзО, рж╕ржм рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓ржХрзЗ ржорзЛржЯ рж╕ржВржЦрзНржпрж╛рж░ ржУржкрж░ ржнрж╛ржЧ ржХрж░рж╛ рж╣рзЯред

ржЧрзЬ (Mean) = (72+88+91+65+70+85+95+79+83+77) / 10 = 80.5
ЁЯФ╣ median = statistics.median(scores)

ржПржЯрж┐ рждрж╛рж▓рж┐ржХрж╛рж░ ржоржзрзНржпржо ржорж╛ржи (Median) ржмрзЗрж░ ржХрж░рзЗред ржкрзНрж░ржержорзЗ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛржХрзЗ ржЫрзЛржЯ ржерзЗржХрзЗ ржмрзЬ ржХрж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ рж╣рзЯ, рждрж╛рж░ржкрж░ ржорж╛ржЭрзЗрж░ ржорж╛ржиржЯрж┐ ржирзЗржУрзЯрж╛ рж╣рзЯред

рж╕рж╛ржЬрж╛ржирзЛ рждрж╛рж▓рж┐ржХрж╛: [65, 70, 72, 77, 79, 83, 85, 88, 91, 95]
ржорж╛ржЭржЦрж╛ржирзЗ ржжрзБржЯрж┐ рж╕ржВржЦрзНржпрж╛ (рзлржо ржУ рзмрж╖рзНржа): 79 ржУ 83
ржорж┐ржбрж┐рзЯрж╛ржи (Median) = (79 + 83) / 2 = 81.0

    ржХрж┐ржирзНрждрзБ рждрзЛржорж╛рж░ ржХрзЛржбрзЗ ржпржжрж┐ Median: 80.0 ржжрзЗржЦрж╛рзЯ, рждрж╛рж╣рж▓рзЗ рж╕ржВржЦрзНржпрж╛ ржПржХржЯрзБ ржЖрж▓рж╛ржжрж╛ рж╣рждрзЗ ржкрж╛рж░рзЗред рждржмрзЗ ржмрзНржпрж╛рж╕рж┐ржХ ржзрж╛рж░ржгрж╛ ржПржЗржЯрж╛ржЗред

ЁЯФЪ рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк (Summary):

    Mean = ржЧрзЬ ржиржорзНржмрж░

    Median = ржоржзрзНржпрзЗрж░ ржиржорзНржмрж░ (ржорж╛ржЭрзЗрж░ ржорж╛ржи)

============================================================================================================================================================
Topic - 2
---------

5. Variance and Standard Deviation English: Variance shows spread of data; standard deviation is its square root.

BD Bengali Explanation: ржмрж┐ржЪрзНржпрзБрждрж┐ (Variance) ржмрж▓рзЗ ржбрзЗржЯрж╛ ржХрждржЯрж╛ ржЫржбрж╝рж╛ржирзЛред

рж╕рзНржЯрзНржпрж╛ржирзНржбрж╛рж░рзНржб ржбрж┐ржнрж┐ржпрж╝рзЗрж╢ржи ржмрж▓рзЗ ржЧржбрж╝ ржерзЗржХрзЗ ржХрждржЯрж╛ ржжрзВрж░рзЗ ржбрзЗржЯрж╛ржЧрзБрж▓рзЛред

Analogy: ржЖржкржирж╛рж░ ржмржирзНржзрзБржжрзЗрж░ ржоржзрзНржпрзЗ ржХрзЗржЙ рззрзл ржкрзЗржпрж╝рзЗржЫрзЗ ржХрзЗржЙ рзл тАУ рждрж╛рж╣рж▓рзЗ ржмрж┐ржЪрзНржпрзБрждрж┐ ржмрзЗрж╢рж┐ред рж╕ржмрж╛ржЗ рззрзж ржкрзЗрж▓рзЗ, ржмрж┐ржЪрзНржпрзБрждрж┐ ржХржоред


deviation
variance
Understanding variance and standard deviation

variance (ржкрзНрж░рж╕рж╛рж░ржг) ржПржмржВ standard deviation (ржорж╛ржи ржмрж┐ржЪрзНржпрзБрждрж┐) ржмрзЗрж░ ржХрж░рж┐ред
тЬЕ ржЖржкржбрзЗржЯрзЗржб ржХрзЛржб:

import statistics

scores = [72, 88, 91, 65, 70, 85, 95, 79, 83, 77]
print("Student scores:", scores)

variance = statistics.variance(scores)
stdev = statistics.stdev(scores)

print("Variance:", variance)
print("Standard Deviation:", stdev)

ЁЯУШ ржмрж╛ржВрж▓рж╛рзЯ ржмрзНржпрж╛ржЦрзНржпрж╛:
ЁЯФ╣ Variance (ржкрзНрж░рж╕рж╛рж░ржг):

Variance рж╣рж▓рзЛ ржЧрзЬ ржерзЗржХрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржбрзЗржЯрж╛ ржкрзЯрзЗржирзНржЯ ржХрждржЯрж╛ ржжрзВрж░рзЗ рж╕рзЗржЯрж╛рж░ ржЧрзЬ рж╕рзНржХрзЛрзЯрж╛рж░ред ржПржЯрж┐ ржжрзЗржЦрж╛рзЯ ржбрзЗржЯрж╛ржЧрзБрж▓рзЛ ржХрждржЯрж╛ ржЫрзЬрж┐рзЯрзЗ ржЖржЫрзЗред
ЁЯФ╣ Standard Deviation (ржорж╛ржи ржмрж┐ржЪрзНржпрзБрждрж┐):

Standard deviation рж╣ржЪрзНржЫрзЗ variance-ржПрж░ ржмрж░рзНржЧржорзВрж▓ред ржПржЯрж┐ ржмрзБржЭрж╛рзЯ ржбрзЗржЯрж╛рж░ ржорж╛ржи ржЧрзЬ ржерзЗржХрзЗ ржЧрзЬрзЗ ржХрждржЯрж╛ ржжрзВрж░рзЗ ржерж╛ржХрзЗред
ЁЯФв Output:

Variance: 100.72222222222223
Standard Deviation: 10.035993499707723

ЁЯза рж╕ржВржХрзНрж╖рзЗржкрзЗ:

    ржкрзНрж░рж╕рж╛рж░ржг (Variance) тЙИ 100.72
    ржорж╛ржи ржмрж┐ржЪрзНржпрзБрждрж┐ (Standard Deviation) тЙИ 10.04

-----------------------------------------------------------------------------------------------------------------------------------------

тЬЕ ржХрзЛржб:

import statistics

scores = [72, 88, 91, 65, 70, 85, 95, 79, 83, 77]
print("Student scores:", scores)

variance = statistics.variance(scores)
stdev = statistics.stdev(scores)

print("Variance:", variance)
print("Standard Deviation:", stdev)

ЁЯУШ ржмрж╛ржВрж▓рж╛рзЯ ржмрзНржпрж╛ржЦрзНржпрж╛:
ЁЯФ╣ scores = [...]

ржПржЦрж╛ржирзЗ рззрзж ржЬржи ржЫрж╛рждрзНрж░рзЗрж░ ржиржорзНржмрж░ ржПржХржЯрж┐ рждрж╛рж▓рж┐ржХрж╛ (list) ржЖржХрж╛рж░рзЗ рж╕ржВрж░ржХрзНрж╖рж┐ржд ржЖржЫрзЗред
ЁЯФ╣ statistics.variance(scores)

ржПржЯрж┐ variance (ржкрзНрж░рж╕рж╛рж░ржг) рж╣рж┐рж╕рж╛ржм ржХрж░рзЗред
Variance рж╣рж▓рзЛ:

    ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржЧрзЬ ржерзЗржХрзЗ ржХрждржЯрж╛ ржжрзВрж░рзЗ рждрж╛ ржмрзЗрж░ ржХрж░рзЗред

    рж╕рзЗржЗ ржжрзВрж░рждрзНржмржЧрзБрж▓рзЛрж░ ржмрж░рзНржЧржлрж▓ ржирж┐рзЯрзЗ ржЧрзЬ ржмрзЗрж░ ржХрж░рж╛ рж╣рзЯред

ржПржЯрж┐ ржЖржорж╛ржжрзЗрж░ ржмрж▓рзЗ ржжрзЗрзЯ, ржиржорзНржмрж░ржЧрзБрж▓рзЛ ржЧрзЬрзЗрж░ ржЖрж╢рзЗржкрж╛рж╢рзЗ ржХрждржЯрж╛ ржЫрзЬрж┐рзЯрзЗ ржЖржЫрзЗред
ЁЯФ╣ statistics.stdev(scores)

ржПржЯрж┐ standard deviation (ржорж╛ржи ржмрж┐ржЪрзНржпрзБрждрж┐) ржмрзЗрж░ ржХрж░рзЗред
Standard deviation рж╣рж▓рзЛ:

    Variance-ржПрж░ ржмрж░рзНржЧржорзВрж▓ (square root)ред

    ржПржЯрж┐ ржЖрж░ржУ ржмрзЗрж╢рж┐ ржмрзЛржЭрж╛рж░ ржЙржкржпрзЛржЧрзА ржорж╛ржи ржжрзЗрзЯ ржХрж╛рж░ржг ржПржХржХ ржерж╛ржХрзЗ ржорзВрж▓ ржбрзЗржЯрж╛рж░ ржорждрзЛ (ржпрзЗржоржи, ржиржорзНржмрж░)ред

ЁЯФв ржлрж▓рж╛ржлрж▓ (Output):

Student scores: [72, 88, 91, 65, 70, 85, 95, 79, 83, 77]
Variance: 100.72222222222223
Standard Deviation: 10.035993499707723

ЁЯза рж╕ржВржХрзНрж╖рзЗржкрзЗ ржоржирзЗ рж░рж╛ржЦрзЛ:
ржкрж░рж┐ржнрж╛рж╖рж╛	ржЕрж░рзНрже
Variance (ржкрзНрж░рж╕рж╛рж░ржг)	рж╕рзНржХрзЛрж░ржЧрзБрж▓рзЛ ржЧрзЬ ржерзЗржХрзЗ ржХрждржЯрж╛ ржЫрзЬрж╛ржирзЛ рждрж╛ ржмрзЛржЭрж╛рзЯ
Standard Deviation (ржорж╛ржи ржмрж┐ржЪрзНржпрзБрждрж┐)	ржЧрзЬ ржерзЗржХрзЗ ржЧрзЬржкрзЬрждрж╛ ржжрзВрж░рждрзНржм (ржмрж░рзНржЧржорзВрж▓рж╕рж╣)
ЁЯФН ржпржЦржи standard deviation ржмрзЗрж╢рж┐ рж╣рзЯ, рждржЦржи ржмрзЛржЭрж╛ ржпрж╛рзЯ ржбрзЗржЯрж╛ ржмрзЗрж╢рж┐ ржЫрзЬрж╛ржирзЛред
ржХржо рж╣рж▓рзЗ ржмрзБржЭрж┐ рж╕ржмрж╛ржЗ ржХрж╛ржЫрж╛ржХрж╛ржЫрж┐ рж╕рзНржХрзЛрж░ ржкрзЗрзЯрзЗржЫрзЗред


============================================================================================================================================
Topic - 3
---------
Visualization 1


import numpy as np
import matplotlib.pyplot as plt

# ржбрзЗржЯрж╛
random_numbers = [1, 10, 11, 12, 21, 34, 31, 33, 40, 45, 100, 101, 201, 25]

# ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи
variance = np.var(random_numbers)

# ржкрзНрж▓ржЯ рждрзИрж░рж┐
plt.figure(figsize=(10, 5))
plt.plot(random_numbers, marker='o', color='blue', label='Data Points')  # ржарж┐ржХ ржПржЦрж╛ржирзЗ data -> random_numbers
plt.axhline(y=np.mean(random_numbers), color='red', linestyle='--', label='Mean')
plt.title(f"Data Plot with Variance: {variance:.2f}")
plt.xlabel('Index')
plt.ylabel('Value')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

----------------------------------

ржбрзЗржЯрж╛ ржнрж┐ржЬрзНржпрзБржпрж╝рж╛рж▓рж╛ржЗржЬрзЗрж╢ржи ржПржмржВ ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (variance, mean) ржмрзЛржЭрж╛рждрзЗ ржжрж╛рж░рзБржгржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗред ржирж┐ржЪрзЗ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржкрзБрж░рзЛ ржХрзЛржб ржПржмржВ рж╕рж╛ржерзЗ low variance ржУ high variance-ржПрж░ ржЙржжрж╛рж╣рж░ржгрж╕рж╣ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рж╛ рж╣рж▓рзЛ:
ЁЯзо ржХрзЛржб ржмрзНржпрж╛ржЦрзНржпрж╛ (ржмрж╛ржВрж▓рж╛рзЯ):

import numpy as np
import matplotlib.pyplot as plt

ЁЯСЙ numpy ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ variance ржУ mean рж╣рж┐рж╕рж╛ржм ржХрж░рж╛рж░ ржЬржирзНржпред
ЁЯСЙ matplotlib.pyplot ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ ржбрзЗржЯрж╛ ржкрзНрж▓ржЯ ржХрж░рж╛рж░ ржЬржирзНржпред

random_numbers = [1, 10, 11, 12, 21, 34, 31, 33, 40, 45, 100, 101, 201, 25]

ЁЯСЙ ржПржЯрж┐ ржПржХржЯрж┐ рж░тАМрзНржпрж╛ржирзНржбржо ржирж╛ржорзНржмрж╛рж░рзЗрж░ рждрж╛рж▓рж┐ржХрж╛, ржпрзЗржЦрж╛ржирзЗ ржЫрзЛржЯ ржУ ржмржбрж╝ ржорж╛ржи ржПржХрж╕рж╛ржерзЗ рж░ржпрж╝рзЗржЫрзЗред ржпрзЗржоржи: 1 ржерзЗржХрзЗ рж╢рзБрж░рзБ ржХрж░рзЗ 201 ржкрж░рзНржпржирзНрждред

variance = np.var(random_numbers)

ЁЯСЙ ржПржЯрж┐ ржкрзБрж░рзЛ ржбрзЗржЯрж╛рж░ variance (ржмрж┐ржЪрзНржпрзБрждрж┐) рж╣рж┐рж╕рж╛ржм ржХрж░рзЗред
Variance рж╣рж▓рзЛ ржЧрзЬ ржорж╛ржи ржерзЗржХрзЗ ржорж╛ржиржЧрзБрж▓рж┐ ржХрждржЯрж╛ ржжрзВрж░рзЗ ржЫржбрж╝рж┐ржпрж╝рзЗ ржЖржЫрзЗ рждрж╛рж░ ржкрж░рж┐ржорж╛ржкред ржмрзЗрж╢рж┐ рж╣рж▓рзЗ ржбрзЗржЯрж╛ ржЕржирзЗржХ ржмрж┐ржЪрзНржЫрж┐ржирзНржи, ржХржо рж╣рж▓рзЗ ржбрзЗржЯрж╛ ржХрж╛ржЫрж╛ржХрж╛ржЫрж┐ред

plt.figure(figsize=(10, 5))

ЁЯСЙ ржЧрзНрж░рж╛ржлрзЗрж░ рж╕рж╛ржЗржЬ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред

plt.plot(random_numbers, marker='o', color='blue', label='Data Points')

ЁЯСЙ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛ (ржЗржиржбрзЗржХрзНрж╕ ржЕржирзБржпрж╛рзЯрзА) ржПржХржЯрж┐ ржмрж┐ржирзНржжрзБ ржЖржХрж╛рж░рзЗ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯрзЗржЫрзЗ (ржирзАрж▓ рж░ржЩрзЗ)ред ржпрзЗржоржи:

    ржЗржиржбрзЗржХрзНрж╕ 0 тЖТ ржорж╛ржи 1

    ржЗржиржбрзЗржХрзНрж╕ 1 тЖТ ржорж╛ржи 10
    ржЗрждрзНржпрж╛ржжрж┐ред

plt.axhline(y=np.mean(random_numbers), color='red', linestyle='--', label='Mean')

ЁЯСЙ рж▓рж╛рж▓ ржбрзНржпрж╛рж╢ рж▓рж╛ржЗржи ржжрзНржмрж╛рж░рж╛ ржЧрзЬ (Mean) ржорж╛ржиржЯрж┐ ржмрзЛржЭрж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЯрж┐ ржЖржорж╛ржжрзЗрж░ ржмрж▓рзЗ ржХрзЛржерж╛ржпрж╝ ржбрзЗржЯрж╛рж░ "ржоржзрзНржпржмрж┐ржирзНржжрзБ"ред

plt.title(f"Data Plot with Variance: {variance:.2f}")
plt.xlabel('Index')
plt.ylabel('Value')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()

ЁЯСЙ ржПржЦрж╛ржирзЗ ржЧрзНрж░рж╛ржлрзЗрж░ рж╢рж┐рж░рзЛржирж╛ржо, рж▓рзЗржмрзЗрж▓, рж▓рзЗржЬрзЗржирзНржб, ржЧрзНрж░рж┐ржб ржПржмржВ рж╕рзБржирзНржжрж░ржнрж╛ржмрзЗ ржкрзНрж░ржжрж░рзНрж╢ржирзЗрж░ ржЬржирзНржп рж▓рзЗржЖржЙржЯ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред
ЁЯУЙ ржЙржжрж╛рж╣рж░ржг: Low Variance

random_numbers = [20, 21, 22, 19, 20, 21]

ЁЯСЙ рж╕ржм рж╕ржВржЦрзНржпрж╛ржЗ ржкрзНрж░рж╛рзЯ ржХрж╛ржЫрж╛ржХрж╛ржЫрж┐ред
ЁЯСЙ Variance рж╣ржмрзЗ ржХржо, ржорж╛ржирзЗ ржбрзЗржЯрж╛ ржЦрзБржм ржмрзЗрж╢рж┐ ржЫрзЬрж╛рзЯржирж┐ред
ЁЯУИ ржЙржжрж╛рж╣рж░ржг: High Variance

random_numbers = [1, 10, 20, 200, 300, 500]

ЁЯСЙ ржХрж┐ржЫрзБ ржорж╛ржи ржЕржирзЗржХ ржмрзЬ ржмрж╛ ржЕржирзЗржХ ржЫрзЛржЯред
ЁЯСЙ Variance рж╣ржмрзЗ ржмрзЗрж╢рж┐, ржорж╛ржирзЗ ржбрзЗржЯрж╛ ржЕржирзЗржХ ржЫрзЬрж┐рзЯрзЗ ржЖржЫрзЗред
тЬЕ ржЙржкрж╕ржВрж╣рж╛рж░:

    Variance ржУ Standard Deviation ржмрзБржЭрждрзЗ ржПржЗ visualization ржЦрзБржмржЗ ржХрж╛рж░рзНржпржХрж░ред

    ржбрзЗржЯрж╛ ржпржжрж┐ ржорж╕рзГржг ржмрж╛ ржХрж╛ржЫрж╛ржХрж╛ржЫрж┐ ржерж╛ржХрзЗ тЖТ low variance

    ржбрзЗржЯрж╛ ржпржжрж┐ ржЫрзЬрж╛ржирзЛ ржерж╛ржХрзЗ ржмрж╛ outlier ржерж╛ржХрзЗ тЖТ high variance

===========================================================================================================================================================
Topic - 4
---------
00:57:00

6. Data Distributions
English:
A distribution shows how often values occur.

BD Bengali Explanation:
ржмрж┐рждрж░ржг (Distribution) ржорж╛ржирзЗ ржХрзЛржи ржорж╛ржи ржХрждржмрж╛рж░ ржШржЯржЫрзЗред рж╣рж┐рж╕рзНржЯрзЛржЧрзНрж░рж╛ржо ржжрж┐ржпрж╝рзЗ ржмрзЛржЭрж╛ ржпрж╛ржпрж╝ред

Bangladeshi Example:
ржПржХржЯрж┐ рж╕рзНржХрзБрж▓рзЗ рззрзжрзж ржЫрж╛рждрзНрж░рзЗрж░ ржоржзрзНржпрзЗ ржмрзЗрж╢рж┐рж░ржнрж╛ржЧрзЗрж░ ржиржорзНржмрж░ рзнрзж-рзорзж рж╣рж▓рзЗ, рж╕рзЗржЯрж┐ bell-shaped ржмрж╛ ржШржирзНржЯрж╛рж░ ржорждрзЛ ржжрзЗржЦрж╛ржпрж╝ред

-----------------------------------------------------------------------------------------------------------------------------------------------------------

import matplotlib.pyplot as plt

scores = [40, 50, 30, 45, 40, 50, 60, 60, 70, 50]
plt.hist(scores, bins=10)
plt.title("Score Distribution")
plt.xlabel("Score")
plt.ylabel("Frequency")
plt.show()


---------------------------------------------------------

matplotlib рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржПржХржЯрж┐ Histogram рждрзИрж░рж┐рж░ ржЬржирзНржпред ржПржмрж╛рж░ ржПржЗ ржХрзЛржбрзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржЕржВрж╢ ржмрж╛ржВрж▓рж╛ ржнрж╛рж╖рж╛рзЯ ржмрж┐рж╕рзНрждрж╛рж░рж┐рждржнрж╛ржмрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржЫрж┐ред
ЁЯФв ржХрзЛржб:

import matplotlib.pyplot as plt

ЁЯФ╕ matplotlib рж╣рж▓рзЛ ржкрж╛ржЗржержирзЗрж░ ржПржХржЯрж┐ ржЬржиржкрзНрж░рж┐рзЯ ржЧрзНрж░рж╛ржл ржЖржБржХрж╛рж░ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ред
ЁЯФ╕ pyplot рж╣рж▓рзЛ matplotlib ржПрж░ ржПржХржЯрж╛ ржЕржВрж╢ ржпрж╛ рж╕рж╣ржЬрзЗ ржЧрзНрж░рж╛ржл ржмрж╛ ржЪрж╛рж░рзНржЯ ржЖржБржХрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗред
ЁЯФ╕ ржЖржорж░рж╛ ржПржЯрж╛ plt ржирж╛ржорзЗ ржЗржорзНржкрзЛрж░рзНржЯ ржХрж░рзЗржЫрж┐ ржпрж╛рждрзЗ ржкрж░рзЗ ржЫрзЛржЯ ржирж╛ржорзЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

scores = [40, 50, 30, 45, 40, 50, 60, 60, 70, 50]

ЁЯФ╕ ржПржЦрж╛ржирзЗ scores ржирж╛ржорзЗ ржПржХржЯрж┐ рж▓рж┐рж╕рзНржЯ (list) ржЖржЫрзЗ ржпрзЗржЦрж╛ржирзЗ ржХрж┐ржЫрзБ ржиржорзНржмрж░ рж░рж╛ржЦрж╛ рж╣рзЯрзЗржЫрзЗред ржзрж░рзЛ ржПржЧрзБрж▓рзЛ рззрзж ржЬржи ржЫрж╛рждрзНрж░рзЗрж░ ржкрж░рзАржХрзНрж╖рж╛рж░ ржиржорзНржмрж░ред

ЁЯФ╣ ржиржорзНржмрж░ржЧрзБрж▓рзЛ рж╣рж▓рзЛ:
30, 40, 40, 45, 50, 50, 50, 60, 60, 70

plt.hist(scores, bins=10)

ЁЯФ╕ ржПржЦрж╛ржирзЗ plt.hist() ржжрж┐рзЯрзЗ ржЖржорж░рж╛ Histogram ржЖржБржХржЫрж┐ред
ЁЯФ╕ scores рж╣рж▓рзЛ рж╕рзЗржЗ ржбрзЗржЯрж╛ ржпрж╛ ржерзЗржХрзЗ ржЧрзНрж░рж╛ржл ржЖржБржХрж╛ рж╣ржмрзЗред
ЁЯФ╕ bins=10 ржорж╛ржирзЗ ржЖржорж░рж╛ рззрзжржЯрж╛ ржнрж╛ржЧрзЗ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ ржнрж╛ржЧ ржХрж░ржмрзЛред ржкрзНрж░рждрж┐ржЯрж╛ bin ржПржХржЯрж┐ рж░рзЗржЮрзНржЬ (range), ржпрзЗржоржи:

30-33, 34-37, ..., 67-70 тАФ ржПрж░ржХржо рззрзжржЯрж╛ ржнрж╛ржЧ рждрзИрж░рж┐ рж╣ржмрзЗред ржкрзНрж░рждрж┐ржЯрж╛ рж░рзЗржЮрзНржЬрзЗ ржХрзЯржЯрж╛ ржиржорзНржмрж░ ржЖржЫрзЗ рждрж╛ ржЧрзБржгрзЗ ржжрзЗржЦрж╛ржмрзЗред

ЁЯУМ ржЙржжрж╛рж╣рж░ржгрж╕рзНржмрж░рзВржк:
Bin Range	рж╕ржВржЦрзНржпрж╛	ржлрзНрж░рж┐ржХрзЛрзЯрзЗржирзНрж╕рж┐ (Frequency)
30тАУ33	1	1
34тАУ37	0	0
38тАУ41	2	2 (40 ржжрзБржЗржмрж╛рж░)
42тАУ45	1	1 (45 ржПржХржмрж╛рж░)
46тАУ49	0	0
50тАУ53	3	3 (50 рждрж┐ржиржмрж╛рж░)
54тАУ57	0	0
58тАУ61	2	2 (60 ржжрзБржЗржмрж╛рж░)
62тАУ65	0	0
66тАУ69	0	0
70тАУ73	1	1 (70 ржПржХржмрж╛рж░)

ржПржЧрзБрж▓рзЛржЗ рж╣ржмрзЗ Histogram-ржПрж░ bars тАФ ржкрзНрж░рждрж┐ржЯрж┐ bar ржПрж░ ржЙржЪрзНржЪрждрж╛ ржжрзЗржЦрж╛ржмрзЗ ржХрждржмрж╛рж░ рж╕рзЗржЗ рж░рзЗржЮрзНржЬрзЗ ржиржорзНржмрж░ ржкрзЬрзЗржЫрзЗред

plt.title("Score Distribution")

ЁЯФ╕ Histogram-ржПрж░ ржЙржкрж░ ржПржХржЯрж┐ ржЯрж╛ржЗржЯрзЗрж▓ (рж╢рж┐рж░рзЛржирж╛ржо) ржжрж┐ржЪрзНржЫрзЗ тАУ "Score Distribution"
ЁЯФ╕ ржмрж╛ржВрж▓рж╛рзЯ ржЕрж░рзНрже: "рж╕рзНржХрзЛрж░рзЗрж░ ржмржирзНржЯржи"

plt.xlabel("Score")

ЁЯФ╕ X-axis (ржЕржХрзНрж╖рж░рзЗржЦрж╛) ржПрж░ рж▓рзЗржмрзЗрж▓ ржжрж┐ржЪрзНржЫрзЗ "Score", ржорж╛ржирзЗ ржПржЦрж╛ржирзЗ ржмрж┐ржнрж┐ржирзНржи ржиржорзНржмрж░рзЗрж░ рж░рзЗржЮрзНржЬ ржжрзЗржЦрж╛ржирзЛ рж╣ржмрзЗред

plt.ylabel("Frequency")

ЁЯФ╕ Y-axis ржП ржжрзЗржЦрж╛ржмрзЗ ржкрзНрж░рждрж┐ржЯрж┐ рж╕рзНржХрзЛрж░ рж░рзЗржЮрзНржЬрзЗ ржХрзЯржЯрж╛ рж╕рзНржХрзЛрж░ ржкрзЬрзЗржЫрзЗред ржорж╛ржирзЗ рж╕ржВржЦрзНржпрж╛ ржЧрзБржирзЗ ржжрзЗржЦрж╛ржмрзЗред

plt.show()

ЁЯФ╕ рж╕ржмржХрж┐ржЫрзБ ржкрзНрж░рж╕рзНрждрзБржд рж╣ржУрзЯрж╛рж░ ржкрж░ plt.show() ржжрж┐рзЯрзЗ ржЪрзВрзЬрж╛ржирзНрждржнрж╛ржмрзЗ ржЧрзНрж░рж╛ржлржЯрж╛ ржжрзЗржЦрж╛ржирзЛ рж╣рзЯред
тЬЕ ржмрж╛ржВрж▓рж╛рзЯ рж╕ржВржХрзНрж╖рзЗржкрзЗ:

ржПржЗ ржХрзЛржбржЯрж┐ рззрзж ржЬржи ржЫрж╛рждрзНрж░рзЗрж░ ржиржорзНржмрж░рзЗрж░ ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗ ржПржХржЯрж┐ Histogram рждрзИрж░рж┐ ржХрж░рзЗред ржПржЗ ржЧрзНрж░рж╛ржлрзЗ ржжрзЗржЦрж╛ ржпрж╛рзЯ:

    ржХрзЛржи рж░рзЗржЮрзНржЬрзЗ ржХрждржЬржи ржкрзЬрзЗржЫрзЗ (ржпрзЗржоржи, 50тАУ53 рж░рзЗржЮрзНржЬрзЗ рзй ржЬржи),

    ржПржмржВ ржиржорзНржмрж░рзЗрж░ ржмржирзНржЯржи ржХрзЗржоржиред

ржПржЯрж┐ ржмрзЛржЭрж╛рзЯ ржбрзЗржЯрж╛ ржХрзАржнрж╛ржмрзЗ ржЫрзЬрж┐рзЯрзЗ ржЖржЫрзЗ, ржХрзЛржи рж░рзЗржЮрзНржЬрзЗ ржмрзЗрж╢рж┐ ржиржорзНржмрж░ ржкрзЬрзЗржЫрзЗ, ржХрзЛржи рж░рзЗржЮрзНржЬрзЗ ржХржоред
ЁЯФН Histogram ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?

    Histogram рж╣рж▓рзЛ bar chart-ржПрж░ ржорждрзЛ, ржХрж┐ржирзНрждрзБ ржПржЯрж╛ range-ржПрж░ ржнрж┐рждрзНрждрж┐рждрзЗ ржХрж╛ржЬ ржХрж░рзЗред

    ржкрзНрж░рждрж┐ржЯрж┐ bar ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕рзНржХрзЛрж░ рж░рзЗржЮрзНржЬрзЗрж░ ржкрзНрж░рждрж┐ржирж┐ржзрж┐рждрзНржм ржХрж░рзЗред

    Bar-ржПрж░ ржЙржЪрзНржЪрждрж╛ ржжрзЗржЦрж╛рзЯ, ржР рж░рзЗржЮрзНржЬрзЗ ржХрждржЯрж╛ рж╕рзНржХрзЛрж░ ржкрзЬрзЗржЫрзЗред

ржпржжрж┐ рждрзБржорж┐ bins=5 ржХрж░рждрзЗ:

plt.hist(scores, bins=5)

рждрж╛рж╣рж▓рзЗ рж░рзЗржЮрзНржЬ ржмрзЬ рж╣ржмрзЗ (ржХржо ржнрж╛ржЧрзЗ ржнрж╛ржЧ ржХрж░рж╛ рж╣ржмрзЗ), ржпрзЗржоржи:

    30тАУ39

    40тАУ49

    50тАУ59

    60тАУ69

    70тАУ79

---------------------------------------------------------------------------------------------------------------------------------------------
01:06:00

import matplotlib.pyplot as plt

# Data
scores = [40, 50, 30, 45, 40, 50, 60, 70, 50]

# Create the histogram and get bar containers
counts, bins, patches = plt.hist(scores, bins=10, edgecolor='black')

# Define a list of colors
colors = ['red', 'green', 'blue', 'orange', 'purple', 'cyan', 'magenta', 'brown', 'gray', 'pink']

# Apply colors to each bar
for patch, color in zip(patches, colors):
    patch.set_facecolor(color)

# Add labels and title
plt.title("Score Distribution")
plt.xlabel("Score")
plt.ylabel("Frequency")

# Show the plot
plt.tight_layout()
plt.show()

---------------------------------------------------------------------------------------------------------------------------------------------------------------
01:10:00 

import matplotlib.pyplot as plt

# Data
scores = [40, 50, 30, 45, 40, 50, 60, 70, 50, 55, 35, 45, 75]

# Create the histogram and get bar containers
counts, bins, patches = plt.hist(scores, bins=14, edgecolor='black')

# Define a list of colors
colors = ['red', 'green', 'blue', 'orange', 'purple', 'cyan', 'magenta', 'brown', 'gray', 'pink']

# Apply colors to each bar
for patch, color in zip(patches, colors):
    patch.set_facecolor(color)

# Add labels and title
plt.title("Score Distribution")
plt.xlabel("Score")
plt.ylabel("Frequency")

# Show the plot
plt.tight_layout()
plt.show()


---------------------------------------------------------------------------------------------------------------------------------------------------------------
01:30:00

import matplotlib.pyplot as plt

# Data
scores = [88, 38, 45, 55, 65, 78, 92, 12, 37, 80, 82, 45, 89, 32]

# Categorize scores into Pass (>=50) and Fail (<50)
pass_scores = [s for s in scores if s >= 50]
fail_scores = [s for s in scores if s < 50]

# Prepare data for plotting
categories = ['Fail (<50)', 'Pass (>50)']
counts = [len(fail_scores), len(pass_scores)]

# Plot
plt.bar(categories, counts, color=['red', 'green'])
plt.title('Student Score Distribution: Pass vs Fail')
plt.xlabel('Category')
plt.ylabel('Number of Students')
plt.ylim(0, max(counts) + 2)

# Show exact count on top of bars
for i, count in enumerate(counts):
    plt.text(i, count + 0.2, str(count), ha='center', fontweight='bold')

plt.show()


---------------------------------------------------------------------------------------------------------------------------------------------------------------
01:41:00

import matplotlib.pyplot as plt

# Data
scores = [88, 38, 45, 55, 65, 78, 92, 12, 37, 80, 82, 45, 89, 32]

# Categorize scores into Pass (>=70) and Fail (<70)

pass_standard_score = 70

pass_scores = [s for s in scores if s >= pass_standard_score]
fail_scores = [s for s in scores if s < pass_standard_score]

# Prepare data for plotting
categories = ['Fail (<70)', 'Pass (>70)']
counts = [len(fail_scores), len(pass_scores)]

# Plot
plt.bar(categories, counts, color=['red', 'green'])
plt.title('Student Score Distribution: Pass vs Fail')
plt.xlabel('Category')
plt.ylabel('Number of Students')
plt.ylim(0, max(counts) + 2)

# Show exact count on top of bars
for i, count in enumerate(counts):
    plt.text(i, count + 0.2, str(count), ha='center', fontweight='bold')

plt.show()


---------------------------------------------------------------------------------------------------------------------------------------------------------------

