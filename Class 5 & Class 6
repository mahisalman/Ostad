# ЁЯЪА Git Commands Cheat Sheet with Examples

---

## ЁЯФз Setup & Configuration

```bash
# Set global username
$ git config --global user.name "John Doe"

# Set global email
$ git config --global user.email "john@example.com"

# List all Git config settings
$ git config --list
```

---

## ЁЯУБ Repository Management

```bash
# Initialize a new Git repository
$ git init

# Clone a repository
$ git clone https://github.com/user/repo.git
```

---

## ЁЯУж Staging & Committing Changes

```bash
# Check the status of files
$ git status

# Add a specific file to staging
$ git add index.html

# Add all files to staging
$ git add .

# Commit changes with a message
$ git commit -m "Initial commit"

# Add & commit tracked files in one command
$ git commit -am "Update content"
```

---

## ЁЯМ▒ Branching & Merging

```bash
# List branches
$ git branch

# Create a new branch
$ git branch feature-xyz

# Switch to a branch
$ git checkout feature-xyz

# Create and switch in one step
$ git checkout -b new-feature

# Merge a branch into the current one
$ git merge feature-xyz

# Delete a branch
$ git branch -d feature-xyz
```

---

## ЁЯФД Remote Repositories

```bash
# View remotes
$ git remote -v

# Add a remote
$ git remote add origin https://github.com/user/repo.git

# Fetch changes from remote
$ git fetch

# Pull changes from remote
$ git pull

# Push changes to remote
$ git push

# Push and set upstream tracking
$ git push -u origin main
```

---

## ЁЯХ░я╕П View History & Differences

```bash
# Show commit history
$ git log

# Compact one-line log
$ git log --oneline

# Show details of a specific commit
$ git show abc1234

# Show unstaged changes
$ git diff

# Show staged changes
$ git diff --staged
```

---

## тПк Undo / Revert / Reset

```bash
# Revert a commit (creates a new commit that undoes changes)
$ git revert abc1234

# Reset to a previous commit, keep changes staged
$ git reset --soft abc1234

# Reset and unstage changes
$ git reset --mixed abc1234

# Hard reset: discard all changes
$ git reset --hard abc1234

# Restore a file to last committed version
$ git restore file.txt

# Unstage a file without discarding changes
$ git restore --staged file.txt
```

---

## ЁЯзк Stashing (Temporary Save)

```bash
# Stash changes
$ git stash

# View stashes
$ git stash list

# Apply last stash
$ git stash apply

# Drop last stash
$ git stash drop
```

---

## ЁЯФН Inspect & Search

```bash
# Search for text in files
$ git grep "function"

# Show who changed each line in a file
$ git blame main.py
```

---

## ЁЯФЦ Tags

```bash
# List tags
$ git tag

# Create a tag
$ git tag v1.0

# Push a tag
$ git push origin v1.0

# Push all tags
$ git push origin --tags
```

---

тЬЕ **Tip:** Always double-check before using `git reset --hard`, as it will remove changes permanently!



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Class - 5
---------
=========
========================================================================================================================================================
ЁЯОУ Lecture: Git, GitHub
рзз. Git ржХрзА ржПржмржВ ржХржЦржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржм?

тЭУ Git ржХрзА?
Git рж╣рж▓ ржПржХржЯрж┐ ржзрж░ржирзЗрж░ version control system тАФ ржпрзЗржЯрж╛ ржорзВрж▓ржд ржЖржкржирж┐ ржпржжрж┐ ржПржХржЯрж┐ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржХрзЛржб ржХрж░рзЗржи, рждрж╛рж╣рж▓рзЗ Git рж╕рзЗржЗ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ рж░рж╛ржЦржмрзЗред
ржЙржжрж╛рж╣рж░ржг: ржнрж╛ржмрзБржи, ржЖржкржирж┐ ржПржХржЯрж┐ ржЧрж▓рзНржкрзЗрж░ ржмржЗ рж▓рж┐ржЦржЫрзЗржиред ржкрзНрж░рждрж┐ржжрж┐ржи ржХрж┐ржЫрзБ ржирж╛ ржХрж┐ржЫрзБ рж▓рж┐ржЦржЫрзЗржиред ржЖржкржирж┐ ржЪрж╛ржЗрж▓рзЗ ржкрзБрж░рзЛржирзЛ рж▓рзЗржЦрж╛ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рзЗ ржжрзЗржЦрждрзЗ ржкрж╛рж░ржмрзЗржиред рждрж╛рж╣рж▓рзЗ ржкрзНрж░рждрж┐ржжрж┐ржи ржПржХржЯрж┐ ржХржкрж┐ ржХрж░рзЗ рж░рж╛ржЦрж▓рзЗржиред Git ржПржЗ ржХрж╛ржЬржЯрж┐ржЗ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржХрж░рзЗред

тЬЕ ржХрзЗржи Git ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи?
ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯ
ржжрж▓ржЧрждржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рж╛ рж╕рж╣ржЬ рж╣рзЯ
ржкрзБрж░рзЛржирзЛ ржнрж╛рж░рзНрж╕ржирзЗ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛ ржпрж╛рзЯ
ржирждрзБржи ржлрж┐ржЪрж╛рж░ ржЖрж▓рж╛ржжрж╛ржнрж╛ржмрзЗ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ ржпрж╛рзЯ (branch)
Git = ржЖржкржирж╛рж░ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржЯрж╛ржЗржо ржЯрзНрж░рж╛ржнрзЗрж▓рж┐ржВ рж╕рж┐рж╕рзНржЯрзЗржо!

рзи. ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржХрзА?
рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ: Version control system рж╣рж▓ ржПржоржи ржПржХржЯрж┐ рж╕ржлржЯржУржпрж╝рзНржпрж╛рж░ ржпрж╛ ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржЗрж▓ ржХржЦржи, ржХрзЗ, ржХрзА ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗржЫрзЗ тАФ ржПржЗ ржЗрждрж┐рж╣рж╛рж╕ рж░рж╛ржЦрзЗред
ржЙржжрж╛рж╣рж░ржг: ржнрж╛ржмрзБржи ржЖржкржирж┐ ржЖржкржирж╛рж░ ржШрж░ рж╕рж╛ржЬрж╛рж▓рзЗржиред ржкрзНрж░рждрж┐ржжрж┐ржи ржПржХржЯрзБ ржХрж░рзЗ ржХрж┐ржЫрзБ ржпрзЛржЧ ржХрж░рж▓рзЗржиред рж╣ржарж╛рзО ржПржХржжрж┐ржи ржоржирзЗ рж╣рж▓ ржЖржЧрзЗрж░ ржЕржмрж╕рзНржерж╛ржЗ ржнрж╛рж▓рзЛ ржЫрж┐рж▓ред ржпржжрж┐ ржЖржкржирж┐ ржкрзНрж░рждрж┐ржжрж┐ржи ржЫржмрж┐ рждрзБрж▓рждрзЗржи, рждрж╛рж╣рж▓рзЗ ржЖржЧрзЗрж░ ржЕржмрж╕рзНржерж╛рзЯ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛ рж╕рж╣ржЬ рж╣рждрзЛред Git ржарж┐ржХ ржПржЗрж░ржХржо ржЯрж╛ржЗржо ржЯрзНрж░рж╛ржнрзЗрж▓рж┐ржВрзЯрзЗрж░ ржЬржирзНржпред

рзй. рж╕рж╛ржзрж╛рж░ржг Git ржХржорж╛ржирзНржбрж╕ржорзВрж╣
ржХржорж╛ржирзНржб			ржХрж╛ржЬ
git init		ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ git ржЪрж╛рж▓рзБ ржХрж░рж╛
git add file.py		ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржлрж╛ржЗрж▓ рж╕рзНржЯрзЗржЬрзЗ ржЖржирж╛
git commit -m "msg"	ржкрж░рж┐ржмрж░рзНрждржи рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛
git status		ржХрзА ржХрзА ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯрзЗржЫрзЗ ржжрзЗржЦрж╛
git log			ржкрзБрж░рзЛржирзЛ commit ржПрж░ ржЗрждрж┐рж╣рж╛рж╕ ржжрзЗржЦрж╛

ржЙржжрж╛рж╣рж░ржг: ржзрж░рзБржи ржЖржкржирж┐ ржПржХржЯрж┐ ржбржХрзБржорзЗржирзНржЯ рж▓рж┐ржЦржЫрзЗржиред ржкрзНрж░рждрж┐ржжрж┐ржи ржХрж┐ржЫрзБ рж▓рж┐ржЦрзЗ рж╕рзЗржн ржХрж░ржЫрзЗржиред git commit рж╕рзЗржЗ рж╕рзЗржн ржХрж░рж╛рж░ ржорждрзЛред

рзк. GitHub ржХрзА ржПржмржВ ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?
тЭУ GitHub ржХрзА?
GitHub рж╣рж▓ Git ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржХрзНрж▓рж╛ржЙржб рж╣рзЛрж╕рзНржЯрж┐ржВ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯред ржПржЦрж╛ржирзЗ Git-ржП ржХрж░рж╛ ржХрзЛржбржЧрзБрж▓рзЛ ржЗржирзНржЯрж╛рж░ржирзЗржЯрзЗрж░ ржорж╛ржзрзНржпржорзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗ рж░рж╛ржЦрж╛ рж╣рзЯред
ржЙржжрж╛рж╣рж░ржг: ржЖржкржирж╛рж░ ржорзЗржорзЛрж░рж┐ (Git) ржЖрж░ Google Photos (GitHub)ред рждржЦржи ржЕржирзНржп ржорзЗржорзНржмрж╛рж░рж░рж╛ржУ ржПржХрж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЗред

рзл. GitHub-ржП рж░рж┐ржкрзЛржЬрж┐ржЯрж░рж┐ рждрзИрж░рж┐ ржУ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛
ржзрж╛ржкрж╕ржорзВрж╣:
https://github.com ржП ржпрж╛ржи
тАЬNew RepositoryтАЭ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи
ржирж╛ржо ржжрж┐ржи, README рж╕рж┐рж▓рзЗржХрзНржЯ ржХрж░рзЗ рждрзИрж░рж┐ ржХрж░рзБржи
Git ржХржорж╛ржирзНржб ржжрж┐рзЯрзЗ ржпрзБржХрзНржд ржХрж░рзБржи:
git remote add origin https://github.com/username/repo.git
git push -u origin main
рж░рж┐ржкрзЛржЬрж┐ржЯрж░рж┐ = ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржкрж╛ржмрж▓рж┐ржХ рж╣рзЛржо

рзм. ржХрзЛржб ржХрзНрж▓рзЛржи ржУ ржкрзБрж╢ ржХрж░рж╛
ржХрзНрж▓рзЛржи ржХрж░рж╛:
git clone https://github.com/username/repo.git
ржкрзБрж╢ ржХрж░рж╛:
git add .
git commit -m "my update"
git push origin main

рзн. Branch ржУ Merge ржПрж░ рж╕рж╣ржЬ ржзрж╛рж░ржгрж╛
Branching:
ржорзВрж▓ рж░рж╛рж╕рзНрждрж╛рзЯ ржХрж╛ржЬ ржирж╛ ржХрж░рзЗ тАФ ржПржХржЯрж┐ ржирждрзБржи рж░рж╛рж╕рзНрждрж╛рзЯ (branch) ржПржХрзНрж╕ржкрзЗрж░рж┐ржорзЗржирзНржЯ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред
git branch feature-1
git checkout feature-1

Merging:
git checkout main
git merge feature-1

ржЙржжрж╛рж╣рж░ржг:ржзрж░рзБржи ржЖржкржирж┐ ржПржХржЯрж┐ ржирждрзБржи ржлрж┐ржЪрж╛рж░ ржЯрзНрж░рж╛ржЗ ржХрж░рж▓рзЗржи (branch), ржнрж╛рж▓рзЛ рж▓рж╛ржЧрж▓рзЗ рж╕рзЗржЯрж┐ржХрзЗ ржорзВрж▓ ржХрзЛржбрзЗ ржпрзБржХрзНржд ржХрж░ржмрзЗржи (merge)ред

рзо. ржПржХржЯрж┐ ржЖржжрж░рзНрж╢ ржкрзНрж░ржЬрзЗржХрзНржЯ ржлрзЛрж▓рзНржбрж╛рж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░
myproject/
тФВ
тФЬтФАтФА src/               # ржорзВрж▓ рж╕рзЛрж░рзНрж╕ ржХрзЛржб
тФЬтФАтФА tests/             # ржЯрзЗрж╕рзНржЯ ржлрж╛ржЗрж▓
тФЬтФАтФА docs/              # ржбржХрзБржорзЗржирзНржЯрзЗрж╢ржи
тФЬтФАтФА data/              # ржбрзЗржЯрж╛ ржлрж╛ржЗрж▓
тФЬтФАтФА scripts/           # рж╕рж╣рж╛рзЯржХ рж╕рзНржХрзНрж░рж┐ржкрзНржЯ
тФЬтФАтФА README.md          # ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐ржмрж░ржг
тФЬтФАтФА .gitignore         # ржХрзЛржи ржлрж╛ржЗрж▓ Git ржП рж░рж╛ржЦрж╛ рж╣ржмрзЗ ржирж╛
тФЬтФАтФА requirements.txt   # ржХрзЛржи ржХрзЛржи рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржжрж░ржХрж╛рж░

рзп. ржХрзЛржбржмрзЗрж╕ рж╕ржВржЧржаржирзЗрж░ рж╕рзЗрж░рж╛ ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕
тЬЕ ржХрж░ржгрзАрзЯ:
ржлрзЛрж▓рзНржбрж╛рж░ржЧрзБрж▓рзЛ ржкрж░рж┐рж╖рзНржХрж╛рж░ рж░рж╛ржЦрзБржи
рж╕ржарж┐ржХ ржХржорж┐ржЯ ржорзЗрж╕рзЗржЬ ржжрж┐ржи
.gitignore ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи
README.md ржжрж┐рзЯрзЗ ржкрзНрж░ржЬрзЗржХрзНржЯ ржмрзБржЭрж┐рзЯрзЗ ржжрж┐ржи
main ржмрзНрж░рж╛ржЮрзНржЪ ржЖрж▓рж╛ржжрж╛ржнрж╛ржмрзЗ рж░рж╛ржЦрзБржи

тЭМ ржпрж╛ ржХрж░ржмрзЗржи ржирж╛:
ржмрзЬ ржбрзЗржЯрж╛ ржлрж╛ржЗрж▓ Git-ржП рж░рж╛ржЦржмрзЗржи ржирж╛
ржнрзБрж▓ ржХржорж┐ржЯ ржмрж╛рж░ржмрж╛рж░ ржХрж░ржмрзЗржи ржирж╛
ржмрж╛рж░ржмрж╛рж░ force push ржХрж░ржмрзЗржи ржирж╛

тЬЕ рж╕рж╛рж░рж╛ржВрж╢
ржмрж┐рж╖рзЯ			рж╕рж╛рж░рж╛ржВрж╢
Git			рж╕рзЛрж░рзНрж╕ ржХрзЛржб ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ рж░рж╛ржЦрж╛ рж╣рзЯ
GitHub			Git ржПрж░ ржХрзНрж▓рж╛ржЙржб рж╕рж╛ржкрзЛрж░рзНржЯ
Git ржХржорж╛ржирзНржб			init, add, commit, push, branch, merge
Version Control		ржХрзЛржбрзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ ржЯрзНрж░рзНржпрж╛ржХ ржПржмржВ рж░рзЛрж▓ржмрзНржпрж╛ржХ ржХрж░рж╛ ржпрж╛рзЯ
ржлрзЛрж▓рзНржбрж╛рж░ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░		ржкрж░рж┐рж╖рзНржХрж╛рж░ ржУ рж╕ржВржЧржарж┐ржд рж░рж╛ржЦрж╛рж░ ржирж┐рзЯржо
Best Practices		ржХрзНрж▓рж┐ржи ржХрзЛржб, ржбржХрзБржорзЗржирзНржЯрзЗрж╢ржи, ржХржорж┐ржЯ ржбрж┐рж╕рж┐ржкрзНрж▓рж┐ржи

===================================================================================================================================================
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
===================================================================================================================================================

Topic - 1
=========
What is Git and why use it
Understanding version control
==========================
Lecture: Git, GitHub

ЁЯМ┐ Git ржХрзА ржПржмржВ ржХрзЗржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржм?
ЁЯФН Git ржХрзА?

Git рж╣рж▓рзЛ ржПржХржЯрж┐ Version Control System (VCS) тАФ ржЕрж░рзНржерж╛рзО, ржЖржкржирж┐ ржпржЦржи ржХрзЛржирзЛ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржХрж╛ржЬ ржХрж░рзЗржи, рждржЦржи Git рж╕рзЗржЗ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ рж╣рж┐рж╕рж╛ржм рж░рж╛ржЦрзЗред
ЁЯУШ ржЙржжрж╛рж╣рж░ржг:
ржзрж░рзБржи, ржЖржкржирж┐ ржПржХржЯрж┐ ржЧрж▓рзНржкрзЗрж░ ржмржЗ рж▓рж┐ржЦржЫрзЗржиред ржкрзНрж░рждрж┐ржжрж┐ржи ржХрж┐ржЫрзБ ржирж╛ ржХрж┐ржЫрзБ ржирждрзБржи ржпрзЛржЧ ржХрж░ржЫрзЗржиред ржЖржкржирж┐ ржирж┐рж╢рзНржЪрзЯржЗ ржЪрж╛ржЗржмрзЗржи ржЖржЧрзЗрж░ рж▓рзЗржЦрж╛ рж╣рж╛рж░рж┐рзЯрзЗ ржирж╛ ржпрж╛ржХ, рждрж╛ржЗ ржкрзНрж░рждрж┐ржжрж┐ржи ржПржХржЯрж┐ ржХрж░рзЗ ржХржкрж┐ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗржиред
Git ржПржЗ ржХрж╛ржЬржЯрж┐ ржЖржкржирж╛рж░ рж╣рзЯрзЗ ржХрж░рзЗ тАФ ржЖржЧрзЗрж░ рж╕ржм рж▓рзЗржЦрж╛ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗ рж░рж╛ржЦрзЗ, ржпрж╛рждрзЗ ржЖржкржирж┐ ржпрзЗржХрзЛржирзЛ рж╕ржорзЯ ржкрзЗржЫржирзЗ ржлрж┐рж░рзЗ ржпрзЗрждрзЗ ржкрж╛рж░рзЗржиред

тЭУ ржХрзЗржи Git ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи?
тЬЕ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ рж░рж╛ржЦрж╛ ржпрж╛рзЯ
ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржХрзЛржи ржлрж╛ржЗрж▓рзЗ ржХржЦржи ржХрзА ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯрзЗржЫрзЗ, рждрж╛ рж╕ржм рж╕ржорзЯ ржЯрзНрж░рзНржпрж╛ржХ ржХрж░рж╛ ржпрж╛рзЯред
тЬЕ ржжрж▓ржЧрждржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рж╛ рж╕рж╣ржЬ
ржПржХрж╛ржзрж┐ржХ ржорж╛ржирзБрж╖ ржПржХрж╕ржЩрзНржЧрзЗ ржПржХржЗ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЗ, рждржмрзБржУ ржХрзЗржЙ ржХрж╛рж░рзЛ ржХрж╛ржЬрзЗрж░ рж╕ржЩрзНржЧрзЗ рж╕ржВржШрж░рзНрж╖рзЗ ржирж╛ ржкрзЬрзЗред
тЬЕ ржкрзБрж░ржирзЛ ржнрж╛рж░рзНрж╕ржирзЗ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛ ржпрж╛рзЯ
ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ ржЖржЧрзЗрж░ ржХрзЛржирзЛ рж╕рзНржерж┐рждрж┐рж╢рзАрж▓ ржЕржмрж╕рзНржерж╛рзЯ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛ ржпрж╛рзЯ ржЦрзБржм рж╕рж╣ржЬрзЗржЗред
тЬЕ ржирждрзБржи ржлрж┐ржЪрж╛рж░ ржЖрж▓рж╛ржжрж╛ржнрж╛ржмрзЗ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ ржпрж╛рзЯ
Branch ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржорзВрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржирж╛ ржЫрзБржБрзЯрзЗ ржирждрзБржи ржлрж┐ржЪрж╛рж░ ржбрзЗржнрзЗрж▓ржк ржУ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рж╛ ржпрж╛рзЯред

ЁЯТб Git ржЖржкржирж╛рж░ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржПржХржЯрж┐ ржЯрж╛ржЗржо ржЯрзНрж░рж╛ржнрзЗрж▓ ржорзЗрж╢рж┐ржирзЗрж░ ржорждрзЛ тАФ ржпрзЗржЯрж╛ ржжрж┐рзЯрзЗ ржЖржкржирж┐ ржЕрждрзАрждрзЗ ржлрж┐рж░рзЗ ржпрзЗрждрзЗ ржкрж╛рж░рзЗржи, ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ рж╣рж┐рж╕рж╛ржм рж░рж╛ржЦрждрзЗ ржкрж╛рж░рзЗржи, ржЖрж░ ржжрж▓ржмржжрзНржзржнрж╛ржмрзЗ ржирж┐ржЦрзБржБрждржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред
------------------------------------------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
------------------------------------------------------------------------------------------------------------------------------------------------------
рзи. ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржХрзА?
рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ:
Version control system рж╣рж▓рзЛ, ржпржЦржи ржПржХржЯрж┐ рж╕ржлржЯржУрзЯрзНржпрж╛рж░рзЗрж░ ржмрж╛ ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржЗрж▓рзЗрж░ ржХрзЗ, ржХржЦржи, ржХрзА ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗржЫрзЗ тАФ ржПржЗ рж╣рж┐рж╕рж╛ржм рж░рж╛ржЦрзЗред

ржЙржжрж╛рж╣рж░ржг:
ржзрж░рзБржи ржЖржкржирж┐ ржЖржкржирж╛рж░ ржерж┐рж╕рзНржпрж╛рж╕ рж╕рж╛ржЬрж╛ржЪрзНржЫрзЗржиред ржЖржкржирж┐ ржкрзНрж░рждрж┐ржжрж┐ржи ржирждрзБржи ржХрж┐ржЫрзБ ржпрзЛржЧ ржХрж░ржЫрзЗржиред рж╣ржарж╛рзО ржПржХржжрж┐ржи ржоржирзЗ рж╣рж▓рзЛ рж╕рж╛ржоржирзЗрж░ рж╕рж╛ржЬрж╛ржирзЛржЯрж╛ ржнрж╛рж▓рзЛ ржЫрж┐рж▓ред ржпржжрж┐ ржмрзБржЭрж┐ ржЦрзБржм ржкрзНрж░рзЯрзЛржЬржи ржкрзНрж░рждрж┐ржжрж┐ржи, рждрж╛рж╣рж▓рзЗ ржЖржЧрзЗрж░ ржЕржмрж╕рзНржерж╛рзЯ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛ ржпрзЗрждред Git ржарж┐ржХ ржПржЗ рж░ржХржо ржЭрзБржБржХрж┐ржЧрзБрж▓рзЛ ржкрзНрж░рждрж┐ржжрж┐ржи ржХржнрж╛рж░рзЗржбред

"ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓" рж╕ржорзНржкрж░рзНржХрзЗ рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрзНржпрж╛ржЦрзНржпрж╛ ржжрзЗржУрзЯрж╛ рж╣рж▓рзЛ, ржпрзЗржи ржпрзЗржХрзЛржирзЛ ржирждрзБржи ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржУ рж╕рж╣ржЬрзЗ ржмрзБржЭрждрзЗ ржкрж╛рж░рзЗ:
ЁЯУМ ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржХрзА?
рж╕рж╣ржЬ ржнрж╛рж╖рж╛рзЯ:

Version Control System (VCS) ржПржоржи ржПржХржЯрж┐ ржкржжрзНржзрждрж┐ ржмрж╛ рж╕ржлржЯржУрзЯрзНржпрж╛рж░, ржпрж╛ ржЖржкржирж╛рж░ ржлрж╛ржЗрж▓ ржмрж╛ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржХрзЗ, ржХржЦржи, ржХрзА ржкрж░рж┐ржмрж░рзНрждржи ржПржирзЗржЫрзЗ тАФ рж╕рзЗржЗ ржЗрждрж┐рж╣рж╛рж╕ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗ рж░рж╛ржЦрзЗред

ржПржЯрж┐ ржорзВрж▓ржд ржПржХржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржбрж╛рзЯрзЗрж░рж┐ тАФ ржпрзЗржЦрж╛ржирзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржЗрж▓рзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ рж╕ржорзЯ, рждрж╛рж░рж┐ржЦ, ржПржмржВ рж╕рзЗржЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрзЗ ржХрж░рзЗржЫрзЗ, рж╕ржмржХрж┐ржЫрзБ рж▓рзЗржЦрж╛ ржерж╛ржХрзЗред
ЁЯОУ ржЙржжрж╛рж╣рж░ржг ржжрж┐рзЯрзЗ ржмрзЛржЭрж╛ ржпрж╛ржХ:

ржзрж░рзБржи, ржЖржкржирж┐ ржПржХржЯрж┐ ржерж┐рж╕рж┐рж╕ ржмрж╛ ржЧржмрзЗрж╖ржгрж╛ржкрждрзНрж░ рж▓рж┐ржЦржЫрзЗржиред ржкрзНрж░рждрж┐ржжрж┐ржи ржХрж┐ржЫрзБ ржирж╛ ржХрж┐ржЫрзБ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░ржЫрзЗржи тАФ ржХрзЛржерж╛ржУ рж▓рзЗржЦрж╛рж░ рж╕рзНржЯрж╛ржЗрж▓ ржкрж╛рж▓рзНржЯрж╛ржЪрзНржЫрзЗржи, ржХрзЛржерж╛ржУ ржирждрзБржи ржкрзНржпрж╛рж░рж╛ржЧрзНрж░рж╛ржл ржпрзЛржЧ ржХрж░ржЫрзЗржиред

ржПржХржжрж┐ржи ржЖржкржирж╛рж░ ржоржирзЗ рж╣рж▓рзЛ, ржЖржЧрзЗрж░ ржжрж┐ржирзЗрж░ рж▓рзЗржЦрж╛ ржмрж╛ ржлрж░рзНржорзНржпрж╛ржЯрж┐ржВржЯрж╛ ржЖрж╕рж▓рзЗ ржмрзЗрж╢рж┐ ржнрж╛рж▓рзЛ ржЫрж┐рж▓ред рждржЦржи ржЖржкржирж┐ ржпржжрж┐ ржкрзБрж░ржирзЛ ржнрж╛рж░рзНрж╕ржиржЯрж╛ ржлрж┐рж░рзЗ ржкрзЗрждрзЗржи, рждрж╛рж╣рж▓рзЗ рж╕рзЗржЯрж╛ржХрзЗржЗ рж░рзЗржЦрзЗ ржжрж┐рждрзЗржиред

Version Control ржЖржкржирж╛ржХрзЗ ржПржЗ ржХрж╛ржЬржЯрж╛ржЗ ржХрж░рждрзЗ ржжрзЗрзЯред ржЖржкржирж┐ ржЪрж╛ржЗрж▓рзЗ:

    ржкрзБрж░ржирзЛ ржХрзЛржирзЛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржжрж┐ржирзЗрж░ рж╕ржВрж╕рзНржХрж░ржгрзЗ ржлрж┐рж░рзЗ ржпрзЗрждрзЗ ржкрж╛рж░рзЗржи,

    ржжрзЗржЦрзЗ ржирж┐рждрзЗ ржкрж╛рж░рзЗржи, ржХрзЗ ржХрзА ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗржЫрж┐рж▓ (ржпржжрж┐ ржЯрж┐ржорзЗ ржХрж╛ржЬ ржХрж░рзЗржи),

    ржнрзБрж▓ ржХрж░рзЗ ржХрж┐ржЫрзБ ржорзБржЫрзЗ ржлрзЗрж▓рж▓рзЗржУ рж╕рж╣ржЬрзЗ ржЖржЧрзЗрж░ ржЕржмрж╕рзНржерж╛рзЯ ржлрж┐рж░рж┐рзЯрзЗ ржЖржирждрзЗ ржкрж╛рж░рзЗржиред

ЁЯФз ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рж╕рзБржмрж┐ржзрж╛:
рж╕рзБржмрж┐ржзрж╛	ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд
ЁЯУЬ ржЗрждрж┐рж╣рж╛рж╕ рж╕ржВрж░ржХрзНрж╖ржг	ржЖржкржирж┐ рж╕ржм рж╕ржорзЯ ржЬрж╛ржирждрзЗ ржкрж╛рж░ржмрзЗржи, ржХрзЛржи ржлрж╛ржЗрж▓ ржХржмрзЗ ржХрзАржнрж╛ржмрзЗ ржмржжрж▓рзЗржЫрзЗред
ЁЯСитАНЁЯСйтАНЁЯСз ржжрж▓ржЧржд ржХрж╛ржЬрзЗрж░ рж╕рзБржмрж┐ржзрж╛	ржПржХрж╛ржзрж┐ржХ ржбрзЗржнрзЗрж▓ржкрж╛рж░ ржПржХрж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рж▓рзЗржУ ржХрж╛рж░рзЛ ржХрж╛ржЬ ржХрж╛рж░рзЛ рж╕ржЩрзНржЧрзЗ рж╕ржВржШрж░рзНрж╖рзЗ ржкрзЬрзЗ ржирж╛ред
тПк ржЖржЧрзЗрж░ ржЕржмрж╕рзНржерж╛рзЯ ржлрж┐рж░рзЗ ржпрж╛ржУрзЯрж╛	ржнрзБрж▓ рж╣рзЯрзЗ ржЧрзЗрж▓рзЗ ржЖржЧрзЗрж░ ржнрж╛рж░рзНрж╕ржирзЗ ржлрж┐рж░рждрзЗ ржкрж╛рж░рзЗржиред
ЁЯзк ржлрж┐ржЪрж╛рж░ ржкрж░рзАржХрзНрж╖рж╛рж░ рж╕рзНржмрж╛ржзрзАржирждрж╛	ржирждрзБржи ржлрж┐ржЪрж╛рж░ ржЖрж▓рж╛ржжрж╛ branch-ржП ржмрж╛ржирж┐рзЯрзЗ ржкрж░рзАржХрзНрж╖рж╛ ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред ржорзВрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯ ржирж┐рж░рж╛ржкржж ржерж╛ржХрзЗред
ЁЯЫая╕П ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?

ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ рж╕рж╛ржзрж╛рж░ржгржд ржжрзБржЗржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ:

    Local Version Control: рж╢рзБржзрзБ ржЖржкржирж╛рж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржерж╛ржХрзЗред

    Distributed Version Control (ржпрзЗржоржи Git): ржкрзНрж░рждрж┐ржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржХрж╛ржЫрзЗ ржкрзБрж░рзЛ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржЗрждрж┐рж╣рж╛рж╕ ржерж╛ржХрзЗред ржЗржирзНржЯрж╛рж░ржирзЗржЯ ржЫрж╛рзЬрж╛ржУ ржХрж╛ржЬ ржХрж░рж╛ ржпрж╛рзЯред

ЁЯФН ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржорж╛ржирзЗржЗ рж╢рзБржзрзБ ржХрзЛржбрж┐ржВ ржирзЯ!

ржЕржирзЗржХрзЗржЗ ржнрж╛ржмрзЗржи Version Control ржХрзЗржмрж▓ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВ ржмрж╛ рж╕ржлржЯржУрзЯрзНржпрж╛рж░ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯрзЗрж░ ржЬржирзНржпред
ржЖрж╕рж▓рзЗ ржирж╛ тАФ ржПржЯрж┐ ржбрж┐ржЬрж╛ржЗржи, рж▓рзЗржЦрж╛рж▓рзЗржЦрж┐, ржХржиржЯрзЗржирзНржЯ ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ рж╕рж╣ ржпрзЗржХрзЛржирзЛ ржХрзНрж╖рзЗрждрзНрж░рзЗржЗ ржХрж╛рж░рзНржпржХрж░ред ржпрзЗржЦрж╛ржирзЗ ржирж┐рзЯржорж┐ржд ржкрж░рж┐ржмрж░рзНрждржи рж╣рзЯ, рж╕рзЗржЦрж╛ржирзЗржЗ ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ ржЙржкржХрж╛рж░рзАред
ЁЯУМ рж╕ржВржХрзНрж╖рзЗржкрзЗ ржмрж▓рж▓рзЗ:

ржнрж╛рж░рзНрж╕ржи ржХржирзНржЯрзНрж░рзЛрж▓ рж╣рж▓рзЛ ржЖржкржирж╛рж░ ржкрзНрж░ржЬрзЗржХрзНржЯрзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ тАЬрж╕рзНржорж╛рж░рзНржЯ ржЯрж╛ржЗржо ржорзЗрж╢рж┐ржитАЭ тАФ ржпрж╛ рж╢рзБржзрзБ рж╕ржорзЯрзЗржЗ ржлрж┐рж░рж┐рзЯрзЗ ржирзЗрзЯ ржирж╛, ржмрж░ржВ ржмрж▓рзЗ ржжрзЗрзЯ ржХрзЗ ржХржмрзЗ ржХрзЛржи ржжрж┐ржХржЯрж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзЗржЫрж┐рж▓, ржПржмржВ рж╕рзЗржЗ ржкрж░рж┐ржмрж░рзНрждржи ржжрж░ржХрж╛рж░ ржЫрж┐рж▓ ржХрж┐ ржирж╛ред
---------------------------------------------------------------------------------------------------------------------------------

Topic - 2
=========
Basic Git commands: init, add, commit
=====================================
01:00:00

At the TERMINAL of VS CODE
--------------------------
PS C:\Users\MAHI-IT> git -v
git version 2.49.0.windows.1
PS C:\Users\MAHI-IT> git -version
unknown option: -version
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]    
           <command> [<args>]
PS C:\Users\MAHI-IT> 
--------------------------------------------------------------------------------------------------------------------------------------------------------

At GIT BASH


MAHI-IT@MAHI-IT MINGW64 ~ (master)
$ git -v
git version 2.49.0.windows.1

MAHI-IT@MAHI-IT MINGW64 ~ (master)
$ git -version
unknown option: -version
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy
-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envva
r>]
           <command> [<args>]

MAHI-IT@MAHI-IT MINGW64 ~ (master)
$ git --version
git version 2.49.0.windows.1

MAHI-IT@MAHI-IT MINGW64 ~ (master)
$

---------------------------------------------------------------------------------------------------------------------------------------------------
PS C:\Users\MAHI-IT> python --version
Python 3.13.3
PS C:\Users\MAHI-IT> git --version
git version 2.49.0.windows.1
---------------------------------------------------------------------------------------------------------------------------------------------------
01:04:07

PS C:\Users\MAHI-IT> git init
Reinitialized existing Git repository in C:/Users/MAHI-IT/.git/
---------------------------------------------------------------------------------------------------------------------------------------------------
creating a physical folder
sample.py
code-
a = 7
b = 8
print(a+b)
Result =>
PS D:\Ustad\Git> python .\sample.py
15
---------------------------------------------------------------------------------------------------------------------------------------------------
multiplication.py
c = 3
d = 12
print(c * d)
Result->

PS D:\Ustad\Git> python .\multiplication.py
36
---------------------------------------------------------------------------------------------------------------------------------------------------
git init
Helps on - Total project initialization
---------------------------------------------------------------------------------------------------------------------------------------------------
1:12:04
Git - Command - ADD
===================

git add sample.py

-> symbol changed from "U" to "A"
U - Untracked
A - Added
---------------------------------------------------------------------------------------------------------------------------------------------------
Git - Command - Commit
======================
PS D:\Ustad\Git> git commit -m "This python code is simply add two variables"

[master (root-commit) 57c3c96] This python code is simply add two variables
 1 file changed, 5 insertions(+)
 create mode 100644 sample.py   

---------------------------------------------------------------------------------------------------------------------------------------------------

PS D:\Ustad\Git> git add multiplication.py

PS D:\Ustad\Git> git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   multiplication.py

PS D:\Ustad\Git> git commit -m 'This python file is used to multiply two numbers'
[master beaf204] This python file is used to multiply two numbers
 1 file changed, 6 insertions(+)
 create mode 100644 multiplication.py

PS D:\Ustad\Git> git status
On branch master
nothing to commit, working tree clean

PS D:\Ustad\Git> git log
commit beaf2043b9edfb0d2e92508958cff9a2357f4c57 (HEAD -> master)
Author: mahisalman <mahi.salman@gmail.com>
Date:   Mon May 26 15:06:17 2025 +0600

    This python file is used to multiply two numbers

commit 57c3c969b464897f1b43effd688e3237fefb8de3
Author: mahisalman <mahi.salman@gmail.com>
Date:   Mon May 26 15:02:08 2025 +0600

    This python code is simply add two variables
---------------------------------------------------------------------------------------------------------------------------------------------------
01:21:40

GIT INIT
GIT ADD
GIT COMMIT
GIT STATUS
GIT LOG
---------------------------------------------------------------------------------------------------------------------------------------------------
01:27:00

After midification

a = 7
b = 8
e = 9
print(a+b+e)
& ---------------------------
c = 3
d = 12
f = 5
print(c * d * f)
---------------------------
PS D:\Ustad\Git> python .\sample.py
24
PS D:\Ustad\Git> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   sample.py

no changes added to commit (use "git add" and/or "git commit -a")
& ---------------------------
 PS D:\Ustad\Git> python .\multiplication.py
180
PS D:\Ustad\Git> git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   multiplication.py
        modified:   sample.py

no changes added to commit (use "git add" and/or "git commit -a")

----------------------------------------------------------

PS D:\Ustad\Git> git add sample.py
PS D:\Ustad\Git> git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   sample.py

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   multiplication.py

PS D:\Ustad\Git> git commit -m 'added anothr interger value to add'
[master 39c96f2] added anothr interger value to add
 1 file changed, 2 insertions(+), 2 deletions(-)
====================================================================================================================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Topic 2 = same things in different way
======================================

ЁЯзн Topic 2: Basic Git Commands тАФ init, add, commit

ЁЯХТ Duration: 01:00:00 тАУ 01:40:05
ЁЯФз Environment: VS Code Terminal & Git Bash
ЁЯЪА Checking Git Version
ЁЯЦея╕П VS Code Terminal

PS C:\Users\MAHI-IT> git -v
git version 2.49.0.windows.1

PS C:\Users\MAHI-IT> git -version
unknown option: -version
usage: git [-v | --version] ...

тЬЕ Correct Usage:

PS C:\Users\MAHI-IT> git --version
git version 2.49.0.windows.1

ЁЯЦея╕П Git Bash

$ git -v
git version 2.49.0.windows.1

$ git -version
unknown option: -version

$ git --version
git version 2.49.0.windows.1

ЁЯРН Checking Python Version

PS C:\Users\MAHI-IT> python --version
Python 3.13.3

ЁЯФз Git Initialization

ЁЯХТ Time: 01:04:07

PS C:\Users\MAHI-IT> git init
Reinitialized existing Git repository in C:/Users/MAHI-IT/.git/

ЁЯУМ Purpose: Initializes a Git repository in your project folder.
ЁЯУБ Sample Files & Python Code
sample.py

a = 7
b = 8
print(a + b)

тЦ╢я╕П Run Result:

PS D:\Ustad\Git> python .\sample.py
15

multiplication.py

c = 3
d = 12
print(c * d)

тЦ╢я╕П Run Result:

PS D:\Ustad\Git> python .\multiplication.py
36

ЁЯУе Git Command: add

ЁЯХТ Time: 01:12:04

git add sample.py

ЁЯФД Symbol changed:

    U тЖТ Untracked

    A тЖТ Added

ЁЯУЭ Git Command: commit

PS D:\Ustad\Git> git commit -m "This python code is simply add two variables"

ЁЯз╛ Output:

[master (root-commit) 57c3c96] This python code is simply add two variables
 1 file changed, 5 insertions(+)
 create mode 100644 sample.py

PS D:\Ustad\Git> git add multiplication.py
PS D:\Ustad\Git> git commit -m "This python file is used to multiply two numbers"

ЁЯз╛ Output:

[master beaf204] This python file is used to multiply two numbers
 1 file changed, 6 insertions(+)
 create mode 100644 multiplication.py

ЁЯУЛ Git Status & Log

git status

тЬФя╕П Clean working tree:

On branch master
nothing to commit, working tree clean

git log

ЁЯз╛ Output:

commit beaf2043... (HEAD -> master)
Author: mahisalman <mahi.salman@gmail.com>
Date:   Mon May 26 15:06:17 2025 +0600

    This python file is used to multiply two numbers

commit 57c3c969...
Author: mahisalman <mahi.salman@gmail.com>
Date:   Mon May 26 15:02:08 2025 +0600

    This python code is simply add two variables

ЁЯФБ Code Modified & Tracked Again

ЁЯХТ Time: 01:27:00
sample.py updated:

a = 7
b = 8
e = 9
print(a + b + e)

тЦ╢я╕П Output:

PS D:\Ustad\Git> python .\sample.py
24

multiplication.py updated:

c = 3
d = 12
f = 5
print(c * d * f)

тЦ╢я╕П Output:

PS D:\Ustad\Git> python .\multiplication.py
180

ЁЯХ╡я╕П Checking Git Status

git status

ЁЯФ║ Output:

Changes not staged for commit:
  modified:   sample.py
  modified:   multiplication.py

ЁЯФД Stage & Commit One File

git add sample.py
git commit -m "added another integer value to add"

ЁЯз╛ Output:

[master 39c96f2] added another integer value to add
 1 file changed, 2 insertions(+), 2 deletions(-)

ЁЯза Summary of Commands
Command	Purpose
git init	Initialize Git in the project folder
git add	Stage files for commit
git commit	Save the staged changes with message
git status	Check current state of working tree
git log	View commit history

ЁЯФЪ End of Topic 2
ЁЯХТ Total Duration: ~40 minutes

-------------------------------------------------------------------
01:40:05
git push

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

token

Never used тАв Expires on Thu, Jun 26 2025 
-----------------------------------------------------------------------------------------------------------------------------------------------------
PS D:\Ustad\Git> git add multiplication.py

PS D:\Ustad\Git> git commit -m 'Added another method for multiplication again'        
[master 6fb972d] Added another method for multiplication again
 1 file changed, 6 insertions(+), 1 deletion(-)

PS D:\Ustad\Git> git push -u origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 350 bytes | 350.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote: This repository moved. Please use the new location:
remote:   https://github.com/mahisalman/GIT_for_Python_27052025.git
To https://github.com/mahisalman/Git.git
   fe5d809..6fb972d  master -> master
branch 'master' set up to track 'origin/master'.
-----------------------------------------------------------------------------------------------------------------------------------------------------

Topic - 3
=========
What is GitHub and how it works
Creating and managing repositories on GitHub
Cloning and pushing code
Branching and merging basics
Typical project folder structure
Best practices for organizing codebase

1:50:00

git branch
git push -u origin master
git checkout -b master
git status
git commit -m 'Added another branch'
git push -u origin main
git push -u origin master
git push -u origin developer
git branch -m master main
git checkout -b aaa
git branch -d aaa
git checkout main
git branch -d aaa
git push -u origin designer 

---------------------------------------------------------------------------------------------------------------------------------------------------------
PS D:\Ustad\Git> git branch
* master

PS D:\Ustad\Git> git checkout -b devoloper
Switched to a new branch 'devoloper'

PS D:\Ustad\Git> git branch
* devoloper
  master

PS D:\Ustad\Git> git push -u origin master
Everything up-to-date

PS D:\Ustad\Git> git checkout -b master

PS D:\Ustad\Git> git status
nothing to commit, working tree clean

PS D:\Ustad\Git> git commit -m 'Added another branch'
On branch devoloper

PS D:\Ustad\Git> git push -u origin main
error: src refspec main does not match any

PS D:\Ustad\Git> git push -u origin master
branch 'master' set up to track 'origin/master'.

PS D:\Ustad\Git> git push -u origin developer
error: src refspec developer does not match any
error: failed to push some refs to 'https://github.com/mahisalman/Git.git'
error: src refspec main does not match any

PS D:\Ustad\Git> git push -u origin master
branch 'master' set up to track 'origin/master'.

PS D:\Ustad\Git> git branch -m master main

PS D:\Ustad\Git> git push -u origin main
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote: This repository moved. Please use the new location:
remote:   https://github.com/mahisalman/GIT_for_Python_27052025.git
remote:
remote: Create a pull request for 'main' on GitHub by visiting:
remote:      https://github.com/mahisalman/GIT_for_Python_27052025/pull/new/main
remote:
To https://github.com/mahisalman/Git.git
branch 'main' set up to track 'origin/main'.
* devoloper
  main
Switched to a new branch 'designer'

PS D:\Ustad\Git> git branch
* designer
  main
branch 'main' set up to track 'origin/main'.
Everything up-to-date

PS D:\Ustad\Git> git push -u origin main
branch 'main' set up to track 'origin/main'.

PS D:\Ustad\Git> git branch
  devoloper
  main
Reinitialized existing Git repository in D:/Ustad/Git/.git/

PS D:\Ustad\Git> git push -u origin main
branch 'main' set up to track 'origin/main'.
Everything up-to-date
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote:   https://github.com/mahisalman/GIT_for_Python_27052025.git
remote:
remote: Create a pull request for 'designer' on GitHub by visiting:
remote:
To https://github.com/mahisalman/Git.git
branch 'designer' set up to track 'origin/designer'.

PS D:\Ustad\Git> git branch -d master

PS D:\Ustad\Git> git checkout main
Switched to branch 'main'

PS D:\Ustad\Git> git branch
  designer
  devoloper
* main

PS D:\Ustad\Git> git checkout -b aaa
Switched to a new branch 'aaa'

PS D:\Ustad\Git> git branch
* aaa
  designer
  devoloper
  main

PS D:\Ustad\Git> git branch -d aaa
error: cannot delete branch 'aaa' used by worktree at 'D:/Ustad/Git'

PS D:\Ustad\Git> git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.

PS D:\Ustad\Git> git branch
  aaa
  designer
  devoloper
* main

PS D:\Ustad\Git> git branch -d aaa
Deleted branch aaa (was 6fb972d).

PS D:\Ustad\Git> git branch
  designer
  devoloper
* main

PS D:\Ustad\Git> git push -u origin main    
branch 'main' set up to track 'origin/main'.
Everything up-to-date

PS D:\Ustad\Git> git push -u origin developer
error: src refspec developer does not match any
error: failed to push some refs to 'https://github.com/mahisalman/Git.git'

PS D:\Ustad\Git> git push -u origin devoloper
branch 'devoloper' set up to track 'origin/devoloper'.
Everything up-to-date

PS D:\Ustad\Git> git push -u origin designer 
branch 'designer' set up to track 'origin/designer'.
Everything up-to-date



-----------------------------------------------------------------------------------------------------------------------------------------------------
git add division.py
git commit -m 'another division program is added'
git status
git branch
git push -u origin main
------------------------------------------------------------------------------
PS D:\Ustad\Git> git add division.py

PS D:\Ustad\Git> git commit -m 'another division program is added'
[main 5757bdc] another division program is added
 1 file changed, 5 insertions(+)
 create mode 100644 division.py

PS D:\Ustad\Git> git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)  

nothing to commit, working tree clean

PS D:\Ustad\Git> git branch
  designer
  devoloper
* main

PS D:\Ustad\Git> git push -u origin main     
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 349 bytes | 116.00 KiB/s, done. 
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote: This repository moved. Please use the new location:
remote:   https://github.com/mahisalman/GIT_for_Python_27052025.git
To https://github.com/mahisalman/Git.git
   6fb972d..5757bdc  main -> main
branch 'main' set up to track 'origin/main'.

-------------------------------------------------------------------------------------------------------------------------------------------------------------


Class - 6
=========

1. Co lab

What is Jupyter Notebook
Running and managing code cells
Introduction to Google Colab
Uploading and sharing notebooks
Writing clean and readable code
Using comments and proper indentation
Writing Markdown in notebooks
Formatting text, lists, and code blocks with Markdown
Creating headings and notes for better understanding

59:00
Try with the incognito mode.

01:10:30
+text
Text block -> for clear code definations
Text formating ( bold, italic, list, link,etc.)

01:25:00
save a copy in drive.
Download

